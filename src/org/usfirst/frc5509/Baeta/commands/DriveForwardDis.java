// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc5509.Baeta.commands;

import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc5509.Baeta.Robot;
import org.usfirst.frc5509.Baeta.subsystems.*;

/**
 *
 */
public class DriveForwardDis extends Command {

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	// public static Drive drive;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	int rt;

	public DriveForwardDis() {

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// drive = new Drive();

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize() {
		this.setTimeout(8);
		if(Robot.switchA.get() == true && Robot.switchB.get() == true && Robot.switchC.get() == true){
			rt = -4500;
		}
		else if(Robot.switchA.get() == false && Robot.switchB.get() == false && Robot.switchC.get() == false){
			rt = -5000;
		}
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		Robot.Encode.get();
		// Robot.gyro1.getValue();

		if (Robot.gyro1.getAngle() > 5 && Robot.EncodeRight.get() > rt) {
			Robot.drive.DriveRobot(-.5, -1);
		} else if (Robot.gyro1.getAngle() < -5
				&& Robot.EncodeRight.get() > rt) {
			Robot.drive.DriveRobot(.5, -1);
		} else if (Robot.EncodeRight.get() > rt) {
			Robot.drive.DriveRobot(0, -1);
		}
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		if (Robot.EncodeRight.get() <= rt
		// && Robot.gyro1.getValue() == 0
		) {
			return true;
		} else {
			return this.isTimedOut();
		}
	}

	// Called once after isFinished returns true
	protected void end() {
		Robot.drive.DriveRobot(0, 0);

	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
	}
}
